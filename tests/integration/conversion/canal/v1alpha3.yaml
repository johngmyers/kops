apiVersion: kops.k8s.io/v1alpha3
kind: Cluster
metadata:
  creationTimestamp: "2016-12-10T22:42:27Z"
  name: minimal.example.com
spec:
  addons:
  - manifest: s3://somebucket/example.yaml
  api:
    access:
    - 0.0.0.0/0
    additionalSANs:
    - proxy.api.minimal.example.com
    dns: {}
    publicName: api.minimal.example.com
  authorization:
    alwaysAllow: {}
  channel: stable
  cloudProvider:
    aws: {}
  configBase: memfs://clusters.example.com/minimal.example.com
  etcdClusters:
  - cpuRequest: 200m
    etcdMembers:
    - instanceGroup: master-us-test-1a
      name: us-test-1a
    memoryRequest: 100Mi
    name: main
  - cpuRequest: 200m
    etcdMembers:
    - instanceGroup: master-us-test-1a
      name: us-test-1a
    memoryRequest: 100Mi
    name: events
  iam: {}
  kubernetesVersion: v1.21.0
  networking:
    canal:
      flanneldIptablesForwardRules: false
    networkCIDRs:
    - 172.20.0.0/16
    nonMasqueradeCIDR: 100.64.0.0/10
    subnets:
    - cidr: 172.20.32.0/19
      name: us-test-1a
      type: Public
      zone: us-test-1a
    topology:
      controlPlane: public
      dns: None
      nodes: private
  sshAccess:
  - 0.0.0.0/0

---

apiVersion: kops.k8s.io/v1alpha3
kind: InstanceGroup
metadata:
  creationTimestamp: "2016-12-10T22:42:28Z"
  labels:
    kops.k8s.io/cluster: minimal.example.com
  name: nodes
spec:
  associatePublicIP: true
  image: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220404
  machineType: t2.medium
  maxSize: 2
  minSize: 2
  role: Node
  subnets:
  - us-test-1a

---

apiVersion: kops.k8s.io/v1alpha3
kind: InstanceGroup
metadata:
  creationTimestamp: "2016-12-10T22:42:28Z"
  labels:
    kops.k8s.io/cluster: minimal.example.com
  name: master-us-test-1a
spec:
  associatePublicIP: true
  image: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220404
  machineType: m3.medium
  maxSize: 1
  minSize: 1
  role: ControlPlane
  subnets:
  - us-test-1a
